blueprint:
  name: Voice - File Content Analyzer
  author: Thaidv1
  description: >-
    # Tool designed to analyze and extract all types of information from media and document files

    ## Blueprint Setup

    ### Required

    * Google Generative AI integration must be installed and configured.

    ### Optional

    * Adjust the prompts for each field used in the script. The descriptions guide the LLM to provide the correct input.

    ### Note

    * Provide a concise and precise description for the script. This description will enable the LLM to recognize that the script is designed to extract data from a media or document file.

    * Make sure to expose the script to Assist after the script has been saved.

    * Do not alter the default script name.
  domain: script
  homeassistant:
    min_version: 2025.8.0
  input:
    google_ai_settings:
      name: Settings for Google Generative AI
      icon: mdi:google
      description: These settings allow you to set up the Google Generative AI integration.
      collapsed: true
      input:
        google_ai_entity:
          name: Google Generative AI Entity
          description: Select the Google Generative AI entity to use for analysis.
          selector:
            entity:
              domain: conversation
              integration: google_generative_ai
    prompt_settings:
      name: Prompt settings for the LLM
      icon: mdi:robot
      description: You can use these settings to finetune the prompts for your specific LLM (model). In most cases the defaults should be fine.
      collapsed: true
      input:
        instructions_prompt:
          name: Instructions Prompt
          description: The prompt which will be used for the LLM can provide the request for the query.
          selector:
            text:
              multiline: true
          default: >-
            This argument is mandatory and must always be provided.

            The tool can analyze content and extract any type of information from an image, video, audio, or document, including text, numbers, objects, speech, and visual features.

            Always clearly specify exactly what data should be extracted.
        camera_selection_prompt:
          name: Camera Selection Prompt
          description: The prompt which will be used for the LLM to select the camera for analysis.
          selector:
            text:
              multiline: true
          default: >-
            This argument is mandatory and must always be provided.

            Select the camera you want to analyze from the following options:
            - kho: Camera Kho
            - cong: Camera Cổng  
            - san: Camera Sân
            - pkhach: Camera Phòng Khách

            Only enter the camera name (kho, cong, san, or pkhach).
mode: parallel
max_exceeded: silent
variables:
  version: 20251019
fields:
  instructions:
    name: Instructions
    description: !input instructions_prompt
    selector:
      text:
        multiline: true
    required: true
  camera_name:
    name: Camera Name
    description: !input camera_selection_prompt
    selector:
      select:
        options:
          - label: Camera Kho
            value: kho
          - label: Camera Cổng
            value: cong
          - label: Camera Sân
            value: san
          - label: Camera Phòng Khách
            value: pkhach
    required: true
sequence:
  - variables:
      google_ai_entity: !input google_ai_entity
      instructions: "{{ instructions | default('') | trim }}"
      camera_name: "{{ camera_name | default('') | trim }}"
      
      # Map camera names to image URLs
      camera_url_map:
        kho: "http://localhost:1984/api/frame.jpeg?src=camera.ezvizkho"
        cong: "http://localhost:1984/api/frame.jpeg?src=camera.ezvizcong"
        san: "http://localhost:1984/api/frame.jpeg?src=camera.ezvizsan"
        pkhach: "http://localhost:1984/api/frame.jpeg?src=camera.pkhach"
      
      selected_camera_url: "{{ camera_url_map[camera_name] }}"
      full_prompt: "{{ 'Analyze this image and ' ~ instructions }}"
      
  - if:
      - alias: Check if variables were set correctly
        condition: template
        value_template: "{{ not instructions }}"
    then:
      - alias: Set variable for error message
        variables:
          response:
            error: >-
              Unable to extract data because instructions is missing or incorrect.
      - alias: Stop the script
        stop: >-
          Unable to extract data because instructions is missing or incorrect.
        response_variable: response
  - if:
      - alias: Check if camera name is valid
        condition: template
        value_template: "{{ camera_name not in ['kho', 'cong', 'san', 'pkhach'] }}"
    then:
      - alias: Set variable for error message
        variables:
          response:
            error: >-
              Unable to extract data because camera selection is invalid. Please select kho, cong, san, or pkhach.
      - alias: Stop the script
        stop: >-
          Unable to extract data because camera selection is invalid.
        response_variable: response

  # Use Google Generative AI to analyze the image directly from URL
  - action: conversation.process
    data:
      agent_id: "{{ google_ai_entity }}"
      text: "{{ full_prompt }}"
      attachment:
        url: "{{ selected_camera_url }}"
    response_variable: google_ai_result

  - if:
      - condition: template
        value_template: "{{ google_ai_result is not defined or google_ai_result.speech is not defined }}"
    then:
      - variables:
          response:
            error: "Failed to analyze image from camera {{ camera_name }}"
      - stop: "Failed to analyze camera image"
        response_variable: response

  - variables:
      response:
        data: "{{ google_ai_result.speech }}"
        camera_analyzed: "{{ camera_name }}"
        analysis_success: true

  - stop: ""
    response_variable: response
